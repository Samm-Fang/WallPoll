[
  {"key": "index.html", "value": "<!DOCTYPE html>\\n<html lang=\\"zh-CN\\">\\n<head>\\n    <meta charset=\\"UTF-8\\">\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\n    <title>WallPoll - 壁纸投票画廊</title>\\n    <link rel=\\"stylesheet\\" href=\\"/css/style.css\\">\\n</head>\\n<body>\\n    <div id=\\"app\\">\\n        <header>\\n            <h1>WallPoll</h1>\\n            <div id=\\"user-info\\">\\n                <input type=\\"number\\" id=\\"user-id\\" min=\\"1\\" max=\\"59\\" placeholder=\\"输入用户ID (1-59)\\">\\n                <button id=\\"login\\">登录</button>\\n            </div>\\n        </header>\\n        <main>\\n            <div id=\\"upload-section\\" style=\\"display: none;\\">\\n                <h2>上传壁纸</h2>\\n                <input type=\\"file\\" id=\\"upload-file\\" accept=\\"image/*\\">\\n                <button id=\\"upload-button\\">上传</button>\\n            </div>\\n            <div id=\\"gallery\\">\\n                <h2>壁纸画廊</h2>\\n                <div id=\\"image-grid\\"></div>\\n            </div>\\n            <div id=\\"vote-section\\" style=\\"display: none;\\">\\n                <h2>投票</h2>\\n                <p>您可以投出最多2票，不能投给自己上传的作品。</p>\\n                <button id=\\"vote-button\\">投票</button>\\n            </div>\\n        </main>\\n    </div>\\n    <script type=\\"module\\" src=\\"/ts/frontend.ts\\"></script>\\n</body>\\n</html>"},
  {"key": "css/style.css", "value": "/* 全局样式 */\\nbody {\\n    margin: 0;\\n    padding: 0;\\n    font-family: 'Arial', sans-serif;\\n    background-color: #f5f5f5; /* 浅灰色背景 */\\n    color: #333;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    min-height: 10vh;\\n}\\n\\n#app {\\n    width: 100%;\\n    max-width: 1200px;\\n    padding: 20px;\\n    background-color: #fff;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n    border-radius: 8px;\\n}\\n\\n/* 头部样式 */\\nheader {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding-bottom: 20px;\\n    border-bottom: 1px solid #e0e0e0;\\n    margin-bottom: 20px;\\n}\\n\\nh1 {\\n    color: #6c829e; /* 浅蓝色标题 */\\n    margin: 0;\\n    font-size: 2em;\\n}\\n\\n#user-info {\\n    display: flex;\\n    gap: 10px;\\n}\\n\\n#user-id {\\n    padding: 8px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    width: 150px;\\n}\\n\\nbutton {\\n    padding: 8px 16px;\\n    background-color: #6c829e; /* 浅蓝色按钮 */\\n    color: white;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    transition: background-color 0.3s ease;\\n}\\n\\nbutton:hover {\\n    background-color: #5a6f8c;\\n}\\n\\n/* 主要内容样式 */\\nmain {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 30px;\\n}\\n\\nh2 {\\n    color: #6c829e; /* 浅蓝色标题 */\\n    margin-bottom: 10px;\\n}\\n\\n/* 上传区域 */\\n#upload-section {\\n    border: 2px dashed #ccc;\\n    padding: 20px;\\n    text-align: center;\\n    border-radius: 8px;\\n}\\n\\n#upload-file {\\n    margin-bottom: 10px;\\n}\\n\\n/* 画廊样式 */\\n#gallery {\\n    width: 100%;\\n}\\n\\n#image-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n    gap: 20px;\\n}\\n\\n.image-item {\\n    position: relative;\\n    width: 100%;\\n    aspect-ratio: 16 / 9;\\n    overflow: hidden;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    transition: transform 0.3s ease;\\n}\\n\\n.image-item img {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n}\\n\\n.image-item:hover {\\n    transform: scale(1.05);\\n}\\n\\n.image-item .vote-count {\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    color: white;\\n    padding: 5px 10px;\\n    border-radius: 4px 0 0 0;\\n    font-size: 0.9em;\\n}\\n\\n/* 投票区域 */\\n#vote-section {\\n    padding: 20px;\\n    border: 1px solid #e0e0e0;\\n    border-radius: 8px;\\n}\\n\\n/* 响应式设计 */\\n@media (max-width: 768px) {\\n    #app {\\n        padding: 10px;\\n    }\\n\\n    header {\\n        flex-direction: column;\\n        align-items: flex-start;\\n        gap: 10px;\\n    }\\n\\n    #image-grid {\\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n        gap: 10px;\\n    }\\n}"},
  {"key": "ts/frontend.ts", "value": "document.addEventListener('DOMContentLoaded', () => {\\n    const userIdInput = document.getElementById('user-id') as HTMLInputElement;\\n    const loginButton = document.getElementById('login') as HTMLButtonElement;\\n    const uploadSection = document.getElementById('upload-section') as HTMLElement;\\n    const uploadFile = document.getElementById('upload-file') as HTMLInputElement;\\n    const uploadButton = document.getElementById('upload-button') as HTMLButtonElement;\\n    const voteSection = document.getElementById('vote-section') as HTMLElement;\\n    const voteButton = document.getElementById('vote-button') as HTMLButtonElement;\\n    const imageGrid = document.getElementById('image-grid') as HTMLElement;\\n\\n    let currentUserId: number | null = null;\\n    let selectedImages: Set<number> = new Set();\\n\\n    loginButton.addEventListener('click', async () => {\\n        const userId = parseInt(userIdInput.value);\\n        if (userId >= 1 && userId <= 59) {\\n            try {\\n                const response = await fetch('/api/auth', {\\n                    method: 'POST',\\n                    headers: {\\n                        'Content-Type': 'application/json'\\n                    },\\n                    body: JSON.stringify({ userId })\\n                });\\n                if (response.ok) {\\n                    currentUserId = userId;\\n                    userIdInput.disabled = true;\\n                    loginButton.textContent = '已登录';\\n                    loginButton.disabled = true;\\n                    uploadSection.style.display = 'block';\\n                    voteSection.style.display = 'block';\\n                    loadGallery();\\n                } else {\\n                    alert('登录失败');\\n                }\\n            } catch (error) {\\n                alert('登录时出错');\\n            }\\n        }\\ else {\\n            alert('请输入有效的用户ID（1-59）');\\n        }\\n    });\\n\\n    uploadButton.addEventListener('click', async () => {\\n        if (!uploadFile.files || uploadFile.files.length === 0) {\\n            alert('请选择一个文件');\\n            return;\\n        }\\n\\n        const formData = new FormData();\\n        formData.append('file', uploadFile.files[0]);\\n        formData.append('userId', currentUserId!.toString());\\n\\n        try {\\n            const response = await fetch('/api/upload', {\\n                method: 'POST',\\n                body: formData\\n            });\\n            if (response.ok) {\\n                alert('上传成功');\\n                uploadFile.value = '';\\n                loadGallery();\\n            } else {\\n                alert('上传失败');\\n            }\\n        } catch (error) {\\n            alert('上传时出错');\\n        }\n    });\\n\\n    voteButton.addEventListener('click', async () => {\\n        if (selectedImages.size === 0) {\\n            alert('请选择至少一张图片进行投票');\\n            return;\\n        }\\n\\n        try {\\n            const response = await fetch('/api/vote', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({\\n                    userId: currentUserId,\\n                    imageIds: Array.from(selectedImages)\\n                })\\n            });\\n            if (response.ok) {\\n                alert('投票成功');\\n                selectedImages.clear();\\n                updateImageGrid();\\n            } else {\\n                alert('投票失败');\\n            }
        } catch (error) {\\n            alert('投票时出错');\\n        }\n    });\\n\\n    async function loadGallery() {\\n        try {\\n            const response = await fetch('/api/gallery');\\n            if (response.ok) {\\n                const images = await response.json();\\n                imageGrid.innerHTML = '';\\n                images.forEach((image: any) => {\\n                    const imageItem = document.createElement('div');\\n                    imageItem.className = 'image-item';\\n                    imageItem.dataset.id = image.id;\\n                    if (image.userId === currentUserId) {\\n                        imageItem.style.pointerEvents = 'none';\\n                    } else {\\n                        imageItem.addEventListener('click', () => toggleImageSelection(image.id));\\n                    }\\n                    imageItem.innerHTML = `\\n                        <img src=\\"${image.url}\\" alt=\\"壁纸\\">\\n                        <div class=\\"vote-count\\">票数: ${image.votes}</div>\\n                    `;\\n                    imageGrid.appendChild(imageItem);\\n                });\\n            }\n        } catch (error) {\\n            console.error('加载画廊时出错', error);\\n        }\n    }\\n\\n    function toggleImageSelection(id: number) {\\n        if (selectedImages.has(id)) {\\n            selectedImages.delete(id);\\n        } else if (selectedImages.size < 2) {\\n            selectedImages.add(id);\\n        } else {\\n            alert('您最多可以投2票');\\n            return;\\n        }\\n        updateImageGrid();\\n    }\\n\\n    function updateImageGrid() {\\n        const imageItems = document.querySelectorAll('.image-item');\\n        imageItems.forEach(item => {\\n            if (selectedImages.has(parseInt(item.dataset.id!))) {\\n                item.style.border = '3px solid #6c829e';\\n            } else {\\n                item.style.border = 'none';\\n            }\n        });\\n    }\\n});"}
]
